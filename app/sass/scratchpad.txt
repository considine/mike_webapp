@include transform(translateX(100px) rotate(45deg));
@include transform(translateX(100px), rotate(45deg));
 @include single-transition(transform, .6s, ease-out, 1s);


//columns if the viewport is less than 769px:

.main-content {
  @media (min-width: 769px) {
    @include column-count(3);
  }

}

sticky footer:
@include sticky-footer(120px, '#root', '#root_footer', '#footer');
root = main div
root_footer = div above footer


multi column:
@media (min-width: 769px) {
@include column-count(3)
@include column-gap(3em)
@include column-rule(1px solid #ccc)
} //borderes or rules


@import "compass/typography"

// to force a line to wrap within column size:
@include force-wrap;

#{ headings(2,4) } {
// rules apply to h2, h4
}
#{ headings(all) }..



p {
  @include ellipsis; //good for readmore
}


critical rhythm:

css foundations web typograohy


//used to create good font size line height combo]
$base-font-size: 16px;
$base-line-height: 1.5em;
@include establish-baseline;
typically lineheight typically 1.5 times the font


h1 {
  @include adjust-font-size-to(36px);
  margin-bottom: rhythm(1, 36px);

}

p {
  @include trailer;
}


//colors:
http://compass-style.org/reference/compass/helpers/colors/


$contrasted-lightness-threshold: 50%;
.button {
  @include contrasted($base); // mixin that picks the contrast color (black or white)
}


@compass url helpers: config where different files are


uncomment relative assets line in config file

li: last-child {
  background-image: image-url('reward.png'); //auto find the image based on config.rb
  width: image-width('reward.png'); // uses this image's native width
  height: image-height('reward.png'); // uses this image's native height

}


//for switchng out text for image
// commonly used for logos

.logo {
  display: inline-block;
  margin-right: .2em;
  @include replace-text('th-logo.png');
  width: image-width();
}

inline-image('image-name'); //embeds image into css file.
//potentially bloats the output css


sprite sheet = way to build one large image with many differnt iamges
a lot is automated by compass
* they must be png files

@import "icons/*.png"; //import all images
@include all-icon-sprites; //makes sprites out of all of the images we'v eimported




//creates class for each

if we include image-hover.png for each image.png, auto uses them on the hover property

$icons-spacing: 20px; // how they are spaced within the sprite
$icons-layout: smart | vertical ...; //how sprite sheett is composed
see naming convention



in config file:
http_images_path = "";
http_generated_images_path = "";

environment =:production
